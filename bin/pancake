#!/bin/bash

if test -f "${@: -1}" ; then
    EXT="pdf"
    LAST=$#
else
    EXT=${@: -1}
    LAST=$(expr $# - 1)
fi

for i in $@; do 
    if [ "$i" == "$EXT" ] ; then
        break;
    fi
    
    IN="$IN$i "
    
    if [ ! -f "$i" ] ; then
      echo -e "\033[1;31mFile '$i' not found !\033[0m"; 
      exit -1;
    fi
done



if [ $LAST == 0 ] ; then
    IN=`ls *.md`
    LAST=`ls *.md | wc -l`
    FIRST=`ls *.md| head -n 1`
else
    FIRST=$1
fi

if [ $LAST -le 2 ] ; then
    OUT="${FIRST%.*}.$EXT"
else
    OUT="$(basename ${PWD%.*}.$EXT)"
fi

UPDATE=$(echo -e "\033[1m%w%f\033[0m changed. \033[1;34mUpdating\033[0m \033[1m$OUT\033[0m…")
EXTRA=" ---quiet"
[[ "$EXT" == "pdf" ]] && EXTRA="$EXTRA -t latex"
MD5=`md5sum $IN`
echo -e "\033[1;33mConverting \033[0;1m$IN\033[1;33m to \033[0;1m$OUT\033[1;33m…\033[0m"
if (panzer $IN -o "$OUT" $EXTRA); then
    echo -e '\033[1;32mConverted with success !\033[0m';
else
    echo -e '\033[1;31mConversion failed !\033[0m';
    exit -1;
fi

echo 'Openning the result…'
xdg-open "$OUT" &

echo -e "Watching \033[1m$IN\033[0m for changes…"
while true ; do
    [[ $MD5 == "`md5sum $IN`" ]] && inotifywait -qre close_write $IN --format "$UPDATE" || echo -e "\033[1m$IN\033[0m changed while converting. \033[1;34mUpdating\033[0m \033[1m$OUT\033[0m…"
    MD5=`md5sum $IN`
    (panzer $IN -o "$OUT" $EXTRA && echo -e '\033[1;32mConverted with success !\033[0m') || echo -e '\033[1;31mConversion failed !\033[0m'
done
